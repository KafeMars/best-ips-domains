name: Update CF-BestIPs

on:
  schedule:
    - cron: '*/15 * * * *'  # 每15分钟运行一次
  workflow_dispatch: # 支持手动触发

jobs:
  update-ips:
    runs-on: ubuntu-latest
    steps:
      - name: 设置 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: 安装 Puppeteer
        run: |
          npm install puppeteer

      - name: 获取并更新 IP 地址
        run: |
          set -e
          
          # 使用 Puppeteer 监听页面并提取 IP 地址
          node -e "
          const puppeteer = require('puppeteer');

          async function getIPs() {
            const browser = await puppeteer.launch({ headless: true });
            const page = await browser.newPage();
            await page.goto('https://api.uouin.com/cloudflare.html', { waitUntil: 'domcontentloaded' });

            // 等待页面中 IP 地址加载
            await page.waitForSelector('pre', { timeout: 30000 });

            // 获取页面内容
            const content = await page.$eval('pre', el => el.innerText);
            
            const ips = content.match(/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/g);
            if (!ips) {
              throw new Error('无法提取 IP 地址');
            }
            
            // 去重并添加端口
            const uniqueIPs = [...new Set(ips)].map(ip => ip + ':8443');

            // 将 IP 地址保存到文件
            const fs = require('fs');
            fs.writeFileSync('CF-BestIPs', uniqueIPs.join('\n'), 'utf8');

            await browser.close();
          }

          getIPs().catch(e => {
            console.error('错误:', e);
            process.exit(1);
          });
          "

          # 提交更新
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          git add CF-BestIPs
          git commit -m "自动更新 CF-BestIPs $(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M')" || true
          git pull --rebase origin main || { echo "错误：git pull --rebase 失败"; exit 1; }
          git push origin main || { echo "错误：git push 失败"; exit 1; }
          echo "成功更新 CF-BestIPs"
        shell: /usr/bin/bash -e {0}
