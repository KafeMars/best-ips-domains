name: Update BestList

on:
  push:
    paths:
      - 'CF-BestIPs-A'
      - 'CF-BestIPs-B'
      - 'BestDomains'
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:

jobs:
  merge-ips:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Merge CF-BestIPs-A, CF-BestIPs-B, and BestDomains
        run: |
          echo "🔄 正在合并 CF-BestIPs-A、CF-BestIPs-B 和 BestDomains..."
          if [ ! -f CF-BestIPs-A ] || [ ! -f CF-BestIPs-B ] || [ ! -f BestDomains ]; then
            echo "❌ 错误：CF-BestIPs-A、CF-BestIPs-B 或 BestDomains 文件不存在"
            ls -l
            exit 1
          fi
          if [ ! -s CF-BestIPs-A ] && [ ! -s CF-BestIPs-B ] && [ ! -s BestDomains ]; then
            echo "❌ 错误：CF-BestIPs-A、CF-BestIPs-B 和 BestDomains 均为空"
            exit 1
          fi
          cat CF-BestIPs-A CF-BestIPs-B BestDomains | awk '!seen[$0]++' > BestList.new
          if [ ! -s BestList.new ]; then
            echo "❌ 错误：合并后文件为空"
            rm BestList.new
            exit 1
          fi
          if [ -f BestList ] && cmp -s BestList BestList.new; then
            echo "✅ 无变化，跳过提交"
            rm BestList.new
            exit 0
          fi
          mv BestList.new BestList
          echo "✅ 合并完成，文件行数: $(wc -l < BestList)"

      - name: Update BestList
        run: |
          set -e

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add BestList
          git commit -m "🤖 Update BestList ($(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M'))" || true

          retry() {
            local n=0
            local max=3
            local delay=5
            until "$@"; do
              n=$((n+1))
              if [ $n -ge $max ]; then
                echo "❌ Command failed after $n attempts: $*"
                return 1
              fi
              echo "Retry $n/$max after $delay seconds..."
              sleep $delay
            done
          }

          retry git push origin main || { echo "❌ Error: git push failed"; exit 1; }
          echo "✅ Successfully pushed BestList"
