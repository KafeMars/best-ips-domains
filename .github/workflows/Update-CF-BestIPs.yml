name: Update CF-BestIPs
on:
  schedule:
    - cron: '*/10 * * * *'  # Runs every 10 minutes
  workflow_dispatch: # Manual trigger

jobs:
  update-ips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get the full history of the repository

      - name: Fetch and update IPv4 addresses
        run: |
          set -e
          # Fetch the Cloudflare IP list from the API
          curl -s -f --connect-timeout 10 --retry 2 'https://api.uouin.com/cloudflare.html' | \
          grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | \
          # Sort the IPs while ensuring uniqueness and preserving the order from the input
          awk '!seen[$0]++' > temp_ips.txt || {
            echo "Error: Unable to fetch or extract IP addresses"
            exit 1
          }

          # Check if temp_ips.txt is empty
          [ -s temp_ips.txt ] || { echo "Error: IP list is empty"; exit 1; }

          # Clear the CF-BestIPs file and write sorted and unique IPs with port
          > CF-BestIPs
          while IFS= read -r ip; do
            echo "${ip}:8443" >> CF-BestIPs
          done < temp_ips.txt

          # Remove temporary file
          rm temp_ips.txt

          # Check if CF-BestIPs is empty
          [ -s CF-BestIPs ] || { echo "Error: IP list is empty"; exit 1; }

          # Commit the update to the repository
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'
          git add CF-BestIPs
          git commit -m "Automated update of CF-BestIPs $(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M')" || true
          git pull --rebase origin main || { echo "Error: git pull --rebase failed"; exit 1; }
          git push origin main || { echo "Error: git push failed"; exit 1; }
          echo "Successfully updated CF-BestIPs"
        shell: /usr/bin/bash -e {0}
