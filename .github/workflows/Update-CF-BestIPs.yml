name: Update CF-BestIPs

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  update-ips:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        list:
          - name: CF-BestIPs-A
            url: 'https://www.wetest.vip/api/cf2dns/get_cloudflare_ip?key=o1zrmHAF&type=v4'
          - name: CF-BestIPs-B
            url: 'https://cf.090227.xyz/CloudFlareYes'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update ${{ matrix.list.name }}
        run: |
          set -e
          retry() {
            local n=0
            local max=3
            local delay=5
            until "$@"; do
              n=$((n+1))
              if [ $n -ge $max ]; then
                echo "‚ùå Command failed after $n attempts: $*"
                return 1
              fi
              echo "Retry $n/$max after $delay seconds..."
              sleep $delay
            done
          }

          echo "üîÑ Fetching IPs from: ${{ matrix.list.url }}"
          IPS=$(retry curl -s -f --connect-timeout 10 --retry 2 --header "Cache-Control: no-cache" "${{ matrix.list.url }}" | \
                grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-fA-F:]+:+)+[0-9a-fA-F]+' | sort -u) || { echo "‚ùå Failed to fetch or parse IPs"; exit 1; }

          [ -n "$IPS" ] || { echo "‚ùå Empty IP list"; exit 1; }

          echo "$IPS" | awk '{print $0":8443"}' > "${{ matrix.list.name }}"
          [ -s "${{ matrix.list.name }}" ] || { echo "‚ùå Processed file is empty"; exit 1; }

          echo "‚úÖ ${ { matrix.list.name }} updated, total lines: $(wc -l < "${{ matrix.list.name }}")"

          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'

          BRANCH="update-${{ matrix.list.name }}-$(date +%s)"
          git checkout -b "$BRANCH"
          git add "${{ matrix.list.name }}"
          git commit -m "ü§ñ Update ${{ matrix.list.name }} $(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M')" || true
          retry git push origin "$BRANCH"

          git fetch origin main
          git checkout main
          git reset --hard origin/main
          if git merge --no-ff "$BRANCH" -m "ü§ñ Merge $BRANCH into main"; then
            retry git push origin main
            echo "‚úÖ Successfully merged $BRANCH into main"
          else
            echo "‚ö†Ô∏è Merge conflict detected. Aborting."
            git merge --abort
          fi
        shell: /usr/bin/bash -e {0}
